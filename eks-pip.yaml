# install eksctl /kubectl /awscli
# configure aws credentials

# command to create cluster
eksctl create cluster --name EKS-DEPLOY-PIP --version 1.23 --region us-east-2 --nodegroup-name IMAGES-PIP --node-type t2.micro --nodes 5

# update config file,so control plane will be on current cluster 
aws eks --region us-east-2 update-kubeconfig --name EKS-DEPLOY-PIP
kubectl cluster-info

# deploy manifest files containing ecr images to run applications in pods
kubectl apply -f deployment-java.yaml
kubectl apply -f deployment-python.yaml
kubectl apply -f deployment-nodejs.yaml
kubectl apply -f deployment-reactjs.yaml

# delete deployed manifest files
kubectl delete -f deployment-java.yaml
kubectl delete -f deployment-python.yaml
kubectl delete -f deployment-nodejs.yaml
kubectl delete -f deployment-reactjs.yaml

# check the applications are running on pods with nodes external IP's
kubectl get pods -A -o wide
kubectl get nodes -A -o wide

# command to check logs of particular pod
kubectl logs pod-name
kubectl logs java-deploy-58ddb47c8d-8h8sk
 
# commands to check namespaces and services created
kubectl get namespaces
kubectl get svc

# command to create a name-space
kubectl create namespace namespace-name

# command to get all resources created by default name space
kubectl get all -n default 

# command to View the details of the deployed service
kubectl -n namespace-name describe service service-name

# commands to delete services and clusters
kubectl delete svc service-name
eksctl delete cluster --name cluster-name

# command to check eksctl version
eksctl version

# command to update cluster-version
aws eks update-cluster-version --region us-east-2 --name EKS-DEPLOY-PIP --kubernetes-version 1.24

# command to update node-group version
eksctl upgrade nodegroup --name=IMAGES-PIP --cluster=EKS-DEPLOY-PIP --region=us-east-2 --kubernetes-version=1.24
